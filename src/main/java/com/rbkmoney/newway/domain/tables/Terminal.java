/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables;


import com.rbkmoney.newway.domain.Keys;
import com.rbkmoney.newway.domain.Nw;
import com.rbkmoney.newway.domain.tables.records.TerminalRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Terminal extends TableImpl<TerminalRecord> {

    private static final long serialVersionUID = 1228013533;

    /**
     * The reference instance of <code>nw.terminal</code>
     */
    public static final Terminal TERMINAL = new Terminal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TerminalRecord> getRecordType() {
        return TerminalRecord.class;
    }

    /**
     * The column <code>nw.terminal.id</code>.
     */
    public final TableField<TerminalRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('nw.terminal_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>nw.terminal.version_id</code>.
     */
    public final TableField<TerminalRecord, Long> VERSION_ID = createField("version_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>nw.terminal.terminal_ref_id</code>.
     */
    public final TableField<TerminalRecord, Integer> TERMINAL_REF_ID = createField("terminal_ref_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nw.terminal.name</code>.
     */
    public final TableField<TerminalRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.terminal.description</code>.
     */
    public final TableField<TerminalRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.terminal.options_json</code>.
     */
    public final TableField<TerminalRecord, String> OPTIONS_JSON = createField("options_json", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>nw.terminal.risk_coverage</code>.
     */
    public final TableField<TerminalRecord, Integer> RISK_COVERAGE = createField("risk_coverage", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nw.terminal.terms_json</code>.
     */
    public final TableField<TerminalRecord, String> TERMS_JSON = createField("terms_json", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>nw.terminal.wtime</code>.
     */
    public final TableField<TerminalRecord, LocalDateTime> WTIME = createField("wtime", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("timezone('utc'::text, now())", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>nw.terminal.current</code>.
     */
    public final TableField<TerminalRecord, Boolean> CURRENT = createField("current", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>nw.terminal</code> table reference
     */
    public Terminal() {
        this("terminal", null);
    }

    /**
     * Create an aliased <code>nw.terminal</code> table reference
     */
    public Terminal(String alias) {
        this(alias, TERMINAL);
    }

    private Terminal(String alias, Table<TerminalRecord> aliased) {
        this(alias, aliased, null);
    }

    private Terminal(String alias, Table<TerminalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Nw.NW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TerminalRecord, Long> getIdentity() {
        return Keys.IDENTITY_TERMINAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TerminalRecord> getPrimaryKey() {
        return Keys.TERMINAL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TerminalRecord>> getKeys() {
        return Arrays.<UniqueKey<TerminalRecord>>asList(Keys.TERMINAL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Terminal as(String alias) {
        return new Terminal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Terminal rename(String name) {
        return new Terminal(name, null);
    }
}
