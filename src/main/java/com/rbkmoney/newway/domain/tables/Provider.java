/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables;


import com.rbkmoney.newway.domain.Keys;
import com.rbkmoney.newway.domain.Nw;
import com.rbkmoney.newway.domain.tables.records.ProviderRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Provider extends TableImpl<ProviderRecord> {

    private static final long serialVersionUID = 1423500565;

    /**
     * The reference instance of <code>nw.provider</code>
     */
    public static final Provider PROVIDER = new Provider();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProviderRecord> getRecordType() {
        return ProviderRecord.class;
    }

    /**
     * The column <code>nw.provider.id</code>.
     */
    public final TableField<ProviderRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('nw.provider_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>nw.provider.version_id</code>.
     */
    public final TableField<ProviderRecord, Long> VERSION_ID = createField("version_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>nw.provider.provider_ref_id</code>.
     */
    public final TableField<ProviderRecord, Integer> PROVIDER_REF_ID = createField("provider_ref_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nw.provider.name</code>.
     */
    public final TableField<ProviderRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.provider.description</code>.
     */
    public final TableField<ProviderRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.provider.proxy_ref_id</code>.
     */
    public final TableField<ProviderRecord, Integer> PROXY_REF_ID = createField("proxy_ref_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nw.provider.proxy_additional_json</code>.
     */
    public final TableField<ProviderRecord, String> PROXY_ADDITIONAL_JSON = createField("proxy_additional_json", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.provider.terminal_json</code>.
     */
    public final TableField<ProviderRecord, String> TERMINAL_JSON = createField("terminal_json", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.provider.abs_account</code>.
     */
    public final TableField<ProviderRecord, String> ABS_ACCOUNT = createField("abs_account", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.provider.payment_terms_json</code>.
     */
    public final TableField<ProviderRecord, String> PAYMENT_TERMS_JSON = createField("payment_terms_json", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>nw.provider.recurrent_paytool_terms_json</code>.
     */
    public final TableField<ProviderRecord, String> RECURRENT_PAYTOOL_TERMS_JSON = createField("recurrent_paytool_terms_json", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>nw.provider.accounts_json</code>.
     */
    public final TableField<ProviderRecord, String> ACCOUNTS_JSON = createField("accounts_json", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>nw.provider.wtime</code>.
     */
    public final TableField<ProviderRecord, LocalDateTime> WTIME = createField("wtime", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("timezone('utc'::text, now())", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>nw.provider.current</code>.
     */
    public final TableField<ProviderRecord, Boolean> CURRENT = createField("current", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>nw.provider</code> table reference
     */
    public Provider() {
        this("provider", null);
    }

    /**
     * Create an aliased <code>nw.provider</code> table reference
     */
    public Provider(String alias) {
        this(alias, PROVIDER);
    }

    private Provider(String alias, Table<ProviderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Provider(String alias, Table<ProviderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Nw.NW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProviderRecord, Long> getIdentity() {
        return Keys.IDENTITY_PROVIDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProviderRecord> getPrimaryKey() {
        return Keys.PROVIDER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProviderRecord>> getKeys() {
        return Arrays.<UniqueKey<ProviderRecord>>asList(Keys.PROVIDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Provider as(String alias) {
        return new Provider(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Provider rename(String name) {
        return new Provider(name, null);
    }
}
