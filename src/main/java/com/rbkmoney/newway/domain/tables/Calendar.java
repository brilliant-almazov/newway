/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables;


import com.rbkmoney.newway.domain.Keys;
import com.rbkmoney.newway.domain.Nw;
import com.rbkmoney.newway.domain.tables.records.CalendarRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Calendar extends TableImpl<CalendarRecord> {

    private static final long serialVersionUID = 1369150036;

    /**
     * The reference instance of <code>nw.calendar</code>
     */
    public static final Calendar CALENDAR = new Calendar();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarRecord> getRecordType() {
        return CalendarRecord.class;
    }

    /**
     * The column <code>nw.calendar.id</code>.
     */
    public final TableField<CalendarRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('nw.calendar_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>nw.calendar.version_id</code>.
     */
    public final TableField<CalendarRecord, Long> VERSION_ID = createField("version_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>nw.calendar.calendar_ref_id</code>.
     */
    public final TableField<CalendarRecord, Integer> CALENDAR_REF_ID = createField("calendar_ref_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nw.calendar.name</code>.
     */
    public final TableField<CalendarRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.calendar.description</code>.
     */
    public final TableField<CalendarRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.calendar.timezone</code>.
     */
    public final TableField<CalendarRecord, LocalDateTime> TIMEZONE = createField("timezone", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>nw.calendar.holidays_json</code>.
     */
    public final TableField<CalendarRecord, String> HOLIDAYS_JSON = createField("holidays_json", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.calendar.first_day_of_week</code>.
     */
    public final TableField<CalendarRecord, Integer> FIRST_DAY_OF_WEEK = createField("first_day_of_week", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>nw.calendar.wtime</code>.
     */
    public final TableField<CalendarRecord, LocalDateTime> WTIME = createField("wtime", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("timezone('utc'::text, now())", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>nw.calendar.current</code>.
     */
    public final TableField<CalendarRecord, Boolean> CURRENT = createField("current", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>nw.calendar</code> table reference
     */
    public Calendar() {
        this("calendar", null);
    }

    /**
     * Create an aliased <code>nw.calendar</code> table reference
     */
    public Calendar(String alias) {
        this(alias, CALENDAR);
    }

    private Calendar(String alias, Table<CalendarRecord> aliased) {
        this(alias, aliased, null);
    }

    private Calendar(String alias, Table<CalendarRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Nw.NW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalendarRecord, Long> getIdentity() {
        return Keys.IDENTITY_CALENDAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalendarRecord> getPrimaryKey() {
        return Keys.CALENDAR_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalendarRecord>> getKeys() {
        return Arrays.<UniqueKey<CalendarRecord>>asList(Keys.CALENDAR_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Calendar as(String alias) {
        return new Calendar(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Calendar rename(String name) {
        return new Calendar(name, null);
    }
}
