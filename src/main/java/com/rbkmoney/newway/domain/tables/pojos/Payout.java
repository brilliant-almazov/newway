/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables.pojos;


import com.rbkmoney.newway.domain.enums.Payoutaccounttype;
import com.rbkmoney.newway.domain.enums.Payoutpaidstatusdetails;
import com.rbkmoney.newway.domain.enums.Payoutstatus;
import com.rbkmoney.newway.domain.enums.Payouttype;
import com.rbkmoney.newway.domain.enums.Usertype;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payout implements Serializable {

    private static final long serialVersionUID = 8004680;

    private Long                    id;
    private Long                    eventId;
    private LocalDateTime           eventCreatedAt;
    private String                  payoutId;
    private String                  partyId;
    private String                  shopId;
    private String                  contractId;
    private LocalDateTime           createdAt;
    private Payoutstatus            status;
    private Payoutpaidstatusdetails statusPaidDetails;
    private String                  statusPaidDetailsCardProviderName;
    private String                  statusPaidDetailsCardProviderTransactionId;
    private String                  statusCancelledUserInfoId;
    private Usertype                statusCancelledUserInfoType;
    private String                  statusCancelledDetails;
    private String                  statusConfirmedUserInfoId;
    private Usertype                statusConfirmedUserInfoType;
    private Payouttype              type;
    private String                  typeCardToken;
    private String                  typeCardPaymentSystem;
    private String                  typeCardBin;
    private String                  typeCardMaskedPan;
    private String                  typeCardTokenProvider;
    private Payoutaccounttype       typeAccountType;
    private String                  typeAccountRussianAccount;
    private String                  typeAccountRussianBankName;
    private String                  typeAccountRussianBankPostAccount;
    private String                  typeAccountRussianBankBik;
    private String                  typeAccountRussianInn;
    private String                  typeAccountInternationalAccountHolder;
    private String                  typeAccountInternationalBankName;
    private String                  typeAccountInternationalBankAddress;
    private String                  typeAccountInternationalIban;
    private String                  typeAccountInternationalBic;
    private String                  typeAccountInternationalLocalBankCode;
    private String                  typeAccountInternationalLegalEntityLegalName;
    private String                  typeAccountInternationalLegalEntityTradingName;
    private String                  typeAccountInternationalLegalEntityRegisteredAddress;
    private String                  typeAccountInternationalLegalEntityActualAddress;
    private String                  typeAccountInternationalLegalEntityRegisteredNumber;
    private String                  typeAccountPurpose;
    private LocalDateTime           typeAccountLegalAgreementSignedAt;
    private String                  typeAccountLegalAgreementId;
    private LocalDateTime           typeAccountLegalAgreementValidUntil;
    private String                  initiatorId;
    private Usertype                initiatorType;
    private LocalDateTime           wtime;
    private Boolean                 current;

    public Payout() {}

    public Payout(Payout value) {
        this.id = value.id;
        this.eventId = value.eventId;
        this.eventCreatedAt = value.eventCreatedAt;
        this.payoutId = value.payoutId;
        this.partyId = value.partyId;
        this.shopId = value.shopId;
        this.contractId = value.contractId;
        this.createdAt = value.createdAt;
        this.status = value.status;
        this.statusPaidDetails = value.statusPaidDetails;
        this.statusPaidDetailsCardProviderName = value.statusPaidDetailsCardProviderName;
        this.statusPaidDetailsCardProviderTransactionId = value.statusPaidDetailsCardProviderTransactionId;
        this.statusCancelledUserInfoId = value.statusCancelledUserInfoId;
        this.statusCancelledUserInfoType = value.statusCancelledUserInfoType;
        this.statusCancelledDetails = value.statusCancelledDetails;
        this.statusConfirmedUserInfoId = value.statusConfirmedUserInfoId;
        this.statusConfirmedUserInfoType = value.statusConfirmedUserInfoType;
        this.type = value.type;
        this.typeCardToken = value.typeCardToken;
        this.typeCardPaymentSystem = value.typeCardPaymentSystem;
        this.typeCardBin = value.typeCardBin;
        this.typeCardMaskedPan = value.typeCardMaskedPan;
        this.typeCardTokenProvider = value.typeCardTokenProvider;
        this.typeAccountType = value.typeAccountType;
        this.typeAccountRussianAccount = value.typeAccountRussianAccount;
        this.typeAccountRussianBankName = value.typeAccountRussianBankName;
        this.typeAccountRussianBankPostAccount = value.typeAccountRussianBankPostAccount;
        this.typeAccountRussianBankBik = value.typeAccountRussianBankBik;
        this.typeAccountRussianInn = value.typeAccountRussianInn;
        this.typeAccountInternationalAccountHolder = value.typeAccountInternationalAccountHolder;
        this.typeAccountInternationalBankName = value.typeAccountInternationalBankName;
        this.typeAccountInternationalBankAddress = value.typeAccountInternationalBankAddress;
        this.typeAccountInternationalIban = value.typeAccountInternationalIban;
        this.typeAccountInternationalBic = value.typeAccountInternationalBic;
        this.typeAccountInternationalLocalBankCode = value.typeAccountInternationalLocalBankCode;
        this.typeAccountInternationalLegalEntityLegalName = value.typeAccountInternationalLegalEntityLegalName;
        this.typeAccountInternationalLegalEntityTradingName = value.typeAccountInternationalLegalEntityTradingName;
        this.typeAccountInternationalLegalEntityRegisteredAddress = value.typeAccountInternationalLegalEntityRegisteredAddress;
        this.typeAccountInternationalLegalEntityActualAddress = value.typeAccountInternationalLegalEntityActualAddress;
        this.typeAccountInternationalLegalEntityRegisteredNumber = value.typeAccountInternationalLegalEntityRegisteredNumber;
        this.typeAccountPurpose = value.typeAccountPurpose;
        this.typeAccountLegalAgreementSignedAt = value.typeAccountLegalAgreementSignedAt;
        this.typeAccountLegalAgreementId = value.typeAccountLegalAgreementId;
        this.typeAccountLegalAgreementValidUntil = value.typeAccountLegalAgreementValidUntil;
        this.initiatorId = value.initiatorId;
        this.initiatorType = value.initiatorType;
        this.wtime = value.wtime;
        this.current = value.current;
    }

    public Payout(
        Long                    id,
        Long                    eventId,
        LocalDateTime           eventCreatedAt,
        String                  payoutId,
        String                  partyId,
        String                  shopId,
        String                  contractId,
        LocalDateTime           createdAt,
        Payoutstatus            status,
        Payoutpaidstatusdetails statusPaidDetails,
        String                  statusPaidDetailsCardProviderName,
        String                  statusPaidDetailsCardProviderTransactionId,
        String                  statusCancelledUserInfoId,
        Usertype                statusCancelledUserInfoType,
        String                  statusCancelledDetails,
        String                  statusConfirmedUserInfoId,
        Usertype                statusConfirmedUserInfoType,
        Payouttype              type,
        String                  typeCardToken,
        String                  typeCardPaymentSystem,
        String                  typeCardBin,
        String                  typeCardMaskedPan,
        String                  typeCardTokenProvider,
        Payoutaccounttype       typeAccountType,
        String                  typeAccountRussianAccount,
        String                  typeAccountRussianBankName,
        String                  typeAccountRussianBankPostAccount,
        String                  typeAccountRussianBankBik,
        String                  typeAccountRussianInn,
        String                  typeAccountInternationalAccountHolder,
        String                  typeAccountInternationalBankName,
        String                  typeAccountInternationalBankAddress,
        String                  typeAccountInternationalIban,
        String                  typeAccountInternationalBic,
        String                  typeAccountInternationalLocalBankCode,
        String                  typeAccountInternationalLegalEntityLegalName,
        String                  typeAccountInternationalLegalEntityTradingName,
        String                  typeAccountInternationalLegalEntityRegisteredAddress,
        String                  typeAccountInternationalLegalEntityActualAddress,
        String                  typeAccountInternationalLegalEntityRegisteredNumber,
        String                  typeAccountPurpose,
        LocalDateTime           typeAccountLegalAgreementSignedAt,
        String                  typeAccountLegalAgreementId,
        LocalDateTime           typeAccountLegalAgreementValidUntil,
        String                  initiatorId,
        Usertype                initiatorType,
        LocalDateTime           wtime,
        Boolean                 current
    ) {
        this.id = id;
        this.eventId = eventId;
        this.eventCreatedAt = eventCreatedAt;
        this.payoutId = payoutId;
        this.partyId = partyId;
        this.shopId = shopId;
        this.contractId = contractId;
        this.createdAt = createdAt;
        this.status = status;
        this.statusPaidDetails = statusPaidDetails;
        this.statusPaidDetailsCardProviderName = statusPaidDetailsCardProviderName;
        this.statusPaidDetailsCardProviderTransactionId = statusPaidDetailsCardProviderTransactionId;
        this.statusCancelledUserInfoId = statusCancelledUserInfoId;
        this.statusCancelledUserInfoType = statusCancelledUserInfoType;
        this.statusCancelledDetails = statusCancelledDetails;
        this.statusConfirmedUserInfoId = statusConfirmedUserInfoId;
        this.statusConfirmedUserInfoType = statusConfirmedUserInfoType;
        this.type = type;
        this.typeCardToken = typeCardToken;
        this.typeCardPaymentSystem = typeCardPaymentSystem;
        this.typeCardBin = typeCardBin;
        this.typeCardMaskedPan = typeCardMaskedPan;
        this.typeCardTokenProvider = typeCardTokenProvider;
        this.typeAccountType = typeAccountType;
        this.typeAccountRussianAccount = typeAccountRussianAccount;
        this.typeAccountRussianBankName = typeAccountRussianBankName;
        this.typeAccountRussianBankPostAccount = typeAccountRussianBankPostAccount;
        this.typeAccountRussianBankBik = typeAccountRussianBankBik;
        this.typeAccountRussianInn = typeAccountRussianInn;
        this.typeAccountInternationalAccountHolder = typeAccountInternationalAccountHolder;
        this.typeAccountInternationalBankName = typeAccountInternationalBankName;
        this.typeAccountInternationalBankAddress = typeAccountInternationalBankAddress;
        this.typeAccountInternationalIban = typeAccountInternationalIban;
        this.typeAccountInternationalBic = typeAccountInternationalBic;
        this.typeAccountInternationalLocalBankCode = typeAccountInternationalLocalBankCode;
        this.typeAccountInternationalLegalEntityLegalName = typeAccountInternationalLegalEntityLegalName;
        this.typeAccountInternationalLegalEntityTradingName = typeAccountInternationalLegalEntityTradingName;
        this.typeAccountInternationalLegalEntityRegisteredAddress = typeAccountInternationalLegalEntityRegisteredAddress;
        this.typeAccountInternationalLegalEntityActualAddress = typeAccountInternationalLegalEntityActualAddress;
        this.typeAccountInternationalLegalEntityRegisteredNumber = typeAccountInternationalLegalEntityRegisteredNumber;
        this.typeAccountPurpose = typeAccountPurpose;
        this.typeAccountLegalAgreementSignedAt = typeAccountLegalAgreementSignedAt;
        this.typeAccountLegalAgreementId = typeAccountLegalAgreementId;
        this.typeAccountLegalAgreementValidUntil = typeAccountLegalAgreementValidUntil;
        this.initiatorId = initiatorId;
        this.initiatorType = initiatorType;
        this.wtime = wtime;
        this.current = current;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getEventId() {
        return this.eventId;
    }

    public void setEventId(Long eventId) {
        this.eventId = eventId;
    }

    public LocalDateTime getEventCreatedAt() {
        return this.eventCreatedAt;
    }

    public void setEventCreatedAt(LocalDateTime eventCreatedAt) {
        this.eventCreatedAt = eventCreatedAt;
    }

    public String getPayoutId() {
        return this.payoutId;
    }

    public void setPayoutId(String payoutId) {
        this.payoutId = payoutId;
    }

    public String getPartyId() {
        return this.partyId;
    }

    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }

    public String getShopId() {
        return this.shopId;
    }

    public void setShopId(String shopId) {
        this.shopId = shopId;
    }

    public String getContractId() {
        return this.contractId;
    }

    public void setContractId(String contractId) {
        this.contractId = contractId;
    }

    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public Payoutstatus getStatus() {
        return this.status;
    }

    public void setStatus(Payoutstatus status) {
        this.status = status;
    }

    public Payoutpaidstatusdetails getStatusPaidDetails() {
        return this.statusPaidDetails;
    }

    public void setStatusPaidDetails(Payoutpaidstatusdetails statusPaidDetails) {
        this.statusPaidDetails = statusPaidDetails;
    }

    public String getStatusPaidDetailsCardProviderName() {
        return this.statusPaidDetailsCardProviderName;
    }

    public void setStatusPaidDetailsCardProviderName(String statusPaidDetailsCardProviderName) {
        this.statusPaidDetailsCardProviderName = statusPaidDetailsCardProviderName;
    }

    public String getStatusPaidDetailsCardProviderTransactionId() {
        return this.statusPaidDetailsCardProviderTransactionId;
    }

    public void setStatusPaidDetailsCardProviderTransactionId(String statusPaidDetailsCardProviderTransactionId) {
        this.statusPaidDetailsCardProviderTransactionId = statusPaidDetailsCardProviderTransactionId;
    }

    public String getStatusCancelledUserInfoId() {
        return this.statusCancelledUserInfoId;
    }

    public void setStatusCancelledUserInfoId(String statusCancelledUserInfoId) {
        this.statusCancelledUserInfoId = statusCancelledUserInfoId;
    }

    public Usertype getStatusCancelledUserInfoType() {
        return this.statusCancelledUserInfoType;
    }

    public void setStatusCancelledUserInfoType(Usertype statusCancelledUserInfoType) {
        this.statusCancelledUserInfoType = statusCancelledUserInfoType;
    }

    public String getStatusCancelledDetails() {
        return this.statusCancelledDetails;
    }

    public void setStatusCancelledDetails(String statusCancelledDetails) {
        this.statusCancelledDetails = statusCancelledDetails;
    }

    public String getStatusConfirmedUserInfoId() {
        return this.statusConfirmedUserInfoId;
    }

    public void setStatusConfirmedUserInfoId(String statusConfirmedUserInfoId) {
        this.statusConfirmedUserInfoId = statusConfirmedUserInfoId;
    }

    public Usertype getStatusConfirmedUserInfoType() {
        return this.statusConfirmedUserInfoType;
    }

    public void setStatusConfirmedUserInfoType(Usertype statusConfirmedUserInfoType) {
        this.statusConfirmedUserInfoType = statusConfirmedUserInfoType;
    }

    public Payouttype getType() {
        return this.type;
    }

    public void setType(Payouttype type) {
        this.type = type;
    }

    public String getTypeCardToken() {
        return this.typeCardToken;
    }

    public void setTypeCardToken(String typeCardToken) {
        this.typeCardToken = typeCardToken;
    }

    public String getTypeCardPaymentSystem() {
        return this.typeCardPaymentSystem;
    }

    public void setTypeCardPaymentSystem(String typeCardPaymentSystem) {
        this.typeCardPaymentSystem = typeCardPaymentSystem;
    }

    public String getTypeCardBin() {
        return this.typeCardBin;
    }

    public void setTypeCardBin(String typeCardBin) {
        this.typeCardBin = typeCardBin;
    }

    public String getTypeCardMaskedPan() {
        return this.typeCardMaskedPan;
    }

    public void setTypeCardMaskedPan(String typeCardMaskedPan) {
        this.typeCardMaskedPan = typeCardMaskedPan;
    }

    public String getTypeCardTokenProvider() {
        return this.typeCardTokenProvider;
    }

    public void setTypeCardTokenProvider(String typeCardTokenProvider) {
        this.typeCardTokenProvider = typeCardTokenProvider;
    }

    public Payoutaccounttype getTypeAccountType() {
        return this.typeAccountType;
    }

    public void setTypeAccountType(Payoutaccounttype typeAccountType) {
        this.typeAccountType = typeAccountType;
    }

    public String getTypeAccountRussianAccount() {
        return this.typeAccountRussianAccount;
    }

    public void setTypeAccountRussianAccount(String typeAccountRussianAccount) {
        this.typeAccountRussianAccount = typeAccountRussianAccount;
    }

    public String getTypeAccountRussianBankName() {
        return this.typeAccountRussianBankName;
    }

    public void setTypeAccountRussianBankName(String typeAccountRussianBankName) {
        this.typeAccountRussianBankName = typeAccountRussianBankName;
    }

    public String getTypeAccountRussianBankPostAccount() {
        return this.typeAccountRussianBankPostAccount;
    }

    public void setTypeAccountRussianBankPostAccount(String typeAccountRussianBankPostAccount) {
        this.typeAccountRussianBankPostAccount = typeAccountRussianBankPostAccount;
    }

    public String getTypeAccountRussianBankBik() {
        return this.typeAccountRussianBankBik;
    }

    public void setTypeAccountRussianBankBik(String typeAccountRussianBankBik) {
        this.typeAccountRussianBankBik = typeAccountRussianBankBik;
    }

    public String getTypeAccountRussianInn() {
        return this.typeAccountRussianInn;
    }

    public void setTypeAccountRussianInn(String typeAccountRussianInn) {
        this.typeAccountRussianInn = typeAccountRussianInn;
    }

    public String getTypeAccountInternationalAccountHolder() {
        return this.typeAccountInternationalAccountHolder;
    }

    public void setTypeAccountInternationalAccountHolder(String typeAccountInternationalAccountHolder) {
        this.typeAccountInternationalAccountHolder = typeAccountInternationalAccountHolder;
    }

    public String getTypeAccountInternationalBankName() {
        return this.typeAccountInternationalBankName;
    }

    public void setTypeAccountInternationalBankName(String typeAccountInternationalBankName) {
        this.typeAccountInternationalBankName = typeAccountInternationalBankName;
    }

    public String getTypeAccountInternationalBankAddress() {
        return this.typeAccountInternationalBankAddress;
    }

    public void setTypeAccountInternationalBankAddress(String typeAccountInternationalBankAddress) {
        this.typeAccountInternationalBankAddress = typeAccountInternationalBankAddress;
    }

    public String getTypeAccountInternationalIban() {
        return this.typeAccountInternationalIban;
    }

    public void setTypeAccountInternationalIban(String typeAccountInternationalIban) {
        this.typeAccountInternationalIban = typeAccountInternationalIban;
    }

    public String getTypeAccountInternationalBic() {
        return this.typeAccountInternationalBic;
    }

    public void setTypeAccountInternationalBic(String typeAccountInternationalBic) {
        this.typeAccountInternationalBic = typeAccountInternationalBic;
    }

    public String getTypeAccountInternationalLocalBankCode() {
        return this.typeAccountInternationalLocalBankCode;
    }

    public void setTypeAccountInternationalLocalBankCode(String typeAccountInternationalLocalBankCode) {
        this.typeAccountInternationalLocalBankCode = typeAccountInternationalLocalBankCode;
    }

    public String getTypeAccountInternationalLegalEntityLegalName() {
        return this.typeAccountInternationalLegalEntityLegalName;
    }

    public void setTypeAccountInternationalLegalEntityLegalName(String typeAccountInternationalLegalEntityLegalName) {
        this.typeAccountInternationalLegalEntityLegalName = typeAccountInternationalLegalEntityLegalName;
    }

    public String getTypeAccountInternationalLegalEntityTradingName() {
        return this.typeAccountInternationalLegalEntityTradingName;
    }

    public void setTypeAccountInternationalLegalEntityTradingName(String typeAccountInternationalLegalEntityTradingName) {
        this.typeAccountInternationalLegalEntityTradingName = typeAccountInternationalLegalEntityTradingName;
    }

    public String getTypeAccountInternationalLegalEntityRegisteredAddress() {
        return this.typeAccountInternationalLegalEntityRegisteredAddress;
    }

    public void setTypeAccountInternationalLegalEntityRegisteredAddress(String typeAccountInternationalLegalEntityRegisteredAddress) {
        this.typeAccountInternationalLegalEntityRegisteredAddress = typeAccountInternationalLegalEntityRegisteredAddress;
    }

    public String getTypeAccountInternationalLegalEntityActualAddress() {
        return this.typeAccountInternationalLegalEntityActualAddress;
    }

    public void setTypeAccountInternationalLegalEntityActualAddress(String typeAccountInternationalLegalEntityActualAddress) {
        this.typeAccountInternationalLegalEntityActualAddress = typeAccountInternationalLegalEntityActualAddress;
    }

    public String getTypeAccountInternationalLegalEntityRegisteredNumber() {
        return this.typeAccountInternationalLegalEntityRegisteredNumber;
    }

    public void setTypeAccountInternationalLegalEntityRegisteredNumber(String typeAccountInternationalLegalEntityRegisteredNumber) {
        this.typeAccountInternationalLegalEntityRegisteredNumber = typeAccountInternationalLegalEntityRegisteredNumber;
    }

    public String getTypeAccountPurpose() {
        return this.typeAccountPurpose;
    }

    public void setTypeAccountPurpose(String typeAccountPurpose) {
        this.typeAccountPurpose = typeAccountPurpose;
    }

    public LocalDateTime getTypeAccountLegalAgreementSignedAt() {
        return this.typeAccountLegalAgreementSignedAt;
    }

    public void setTypeAccountLegalAgreementSignedAt(LocalDateTime typeAccountLegalAgreementSignedAt) {
        this.typeAccountLegalAgreementSignedAt = typeAccountLegalAgreementSignedAt;
    }

    public String getTypeAccountLegalAgreementId() {
        return this.typeAccountLegalAgreementId;
    }

    public void setTypeAccountLegalAgreementId(String typeAccountLegalAgreementId) {
        this.typeAccountLegalAgreementId = typeAccountLegalAgreementId;
    }

    public LocalDateTime getTypeAccountLegalAgreementValidUntil() {
        return this.typeAccountLegalAgreementValidUntil;
    }

    public void setTypeAccountLegalAgreementValidUntil(LocalDateTime typeAccountLegalAgreementValidUntil) {
        this.typeAccountLegalAgreementValidUntil = typeAccountLegalAgreementValidUntil;
    }

    public String getInitiatorId() {
        return this.initiatorId;
    }

    public void setInitiatorId(String initiatorId) {
        this.initiatorId = initiatorId;
    }

    public Usertype getInitiatorType() {
        return this.initiatorType;
    }

    public void setInitiatorType(Usertype initiatorType) {
        this.initiatorType = initiatorType;
    }

    public LocalDateTime getWtime() {
        return this.wtime;
    }

    public void setWtime(LocalDateTime wtime) {
        this.wtime = wtime;
    }

    public Boolean getCurrent() {
        return this.current;
    }

    public void setCurrent(Boolean current) {
        this.current = current;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Payout other = (Payout) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (eventId == null) {
            if (other.eventId != null)
                return false;
        }
        else if (!eventId.equals(other.eventId))
            return false;
        if (eventCreatedAt == null) {
            if (other.eventCreatedAt != null)
                return false;
        }
        else if (!eventCreatedAt.equals(other.eventCreatedAt))
            return false;
        if (payoutId == null) {
            if (other.payoutId != null)
                return false;
        }
        else if (!payoutId.equals(other.payoutId))
            return false;
        if (partyId == null) {
            if (other.partyId != null)
                return false;
        }
        else if (!partyId.equals(other.partyId))
            return false;
        if (shopId == null) {
            if (other.shopId != null)
                return false;
        }
        else if (!shopId.equals(other.shopId))
            return false;
        if (contractId == null) {
            if (other.contractId != null)
                return false;
        }
        else if (!contractId.equals(other.contractId))
            return false;
        if (createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!createdAt.equals(other.createdAt))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (statusPaidDetails == null) {
            if (other.statusPaidDetails != null)
                return false;
        }
        else if (!statusPaidDetails.equals(other.statusPaidDetails))
            return false;
        if (statusPaidDetailsCardProviderName == null) {
            if (other.statusPaidDetailsCardProviderName != null)
                return false;
        }
        else if (!statusPaidDetailsCardProviderName.equals(other.statusPaidDetailsCardProviderName))
            return false;
        if (statusPaidDetailsCardProviderTransactionId == null) {
            if (other.statusPaidDetailsCardProviderTransactionId != null)
                return false;
        }
        else if (!statusPaidDetailsCardProviderTransactionId.equals(other.statusPaidDetailsCardProviderTransactionId))
            return false;
        if (statusCancelledUserInfoId == null) {
            if (other.statusCancelledUserInfoId != null)
                return false;
        }
        else if (!statusCancelledUserInfoId.equals(other.statusCancelledUserInfoId))
            return false;
        if (statusCancelledUserInfoType == null) {
            if (other.statusCancelledUserInfoType != null)
                return false;
        }
        else if (!statusCancelledUserInfoType.equals(other.statusCancelledUserInfoType))
            return false;
        if (statusCancelledDetails == null) {
            if (other.statusCancelledDetails != null)
                return false;
        }
        else if (!statusCancelledDetails.equals(other.statusCancelledDetails))
            return false;
        if (statusConfirmedUserInfoId == null) {
            if (other.statusConfirmedUserInfoId != null)
                return false;
        }
        else if (!statusConfirmedUserInfoId.equals(other.statusConfirmedUserInfoId))
            return false;
        if (statusConfirmedUserInfoType == null) {
            if (other.statusConfirmedUserInfoType != null)
                return false;
        }
        else if (!statusConfirmedUserInfoType.equals(other.statusConfirmedUserInfoType))
            return false;
        if (type == null) {
            if (other.type != null)
                return false;
        }
        else if (!type.equals(other.type))
            return false;
        if (typeCardToken == null) {
            if (other.typeCardToken != null)
                return false;
        }
        else if (!typeCardToken.equals(other.typeCardToken))
            return false;
        if (typeCardPaymentSystem == null) {
            if (other.typeCardPaymentSystem != null)
                return false;
        }
        else if (!typeCardPaymentSystem.equals(other.typeCardPaymentSystem))
            return false;
        if (typeCardBin == null) {
            if (other.typeCardBin != null)
                return false;
        }
        else if (!typeCardBin.equals(other.typeCardBin))
            return false;
        if (typeCardMaskedPan == null) {
            if (other.typeCardMaskedPan != null)
                return false;
        }
        else if (!typeCardMaskedPan.equals(other.typeCardMaskedPan))
            return false;
        if (typeCardTokenProvider == null) {
            if (other.typeCardTokenProvider != null)
                return false;
        }
        else if (!typeCardTokenProvider.equals(other.typeCardTokenProvider))
            return false;
        if (typeAccountType == null) {
            if (other.typeAccountType != null)
                return false;
        }
        else if (!typeAccountType.equals(other.typeAccountType))
            return false;
        if (typeAccountRussianAccount == null) {
            if (other.typeAccountRussianAccount != null)
                return false;
        }
        else if (!typeAccountRussianAccount.equals(other.typeAccountRussianAccount))
            return false;
        if (typeAccountRussianBankName == null) {
            if (other.typeAccountRussianBankName != null)
                return false;
        }
        else if (!typeAccountRussianBankName.equals(other.typeAccountRussianBankName))
            return false;
        if (typeAccountRussianBankPostAccount == null) {
            if (other.typeAccountRussianBankPostAccount != null)
                return false;
        }
        else if (!typeAccountRussianBankPostAccount.equals(other.typeAccountRussianBankPostAccount))
            return false;
        if (typeAccountRussianBankBik == null) {
            if (other.typeAccountRussianBankBik != null)
                return false;
        }
        else if (!typeAccountRussianBankBik.equals(other.typeAccountRussianBankBik))
            return false;
        if (typeAccountRussianInn == null) {
            if (other.typeAccountRussianInn != null)
                return false;
        }
        else if (!typeAccountRussianInn.equals(other.typeAccountRussianInn))
            return false;
        if (typeAccountInternationalAccountHolder == null) {
            if (other.typeAccountInternationalAccountHolder != null)
                return false;
        }
        else if (!typeAccountInternationalAccountHolder.equals(other.typeAccountInternationalAccountHolder))
            return false;
        if (typeAccountInternationalBankName == null) {
            if (other.typeAccountInternationalBankName != null)
                return false;
        }
        else if (!typeAccountInternationalBankName.equals(other.typeAccountInternationalBankName))
            return false;
        if (typeAccountInternationalBankAddress == null) {
            if (other.typeAccountInternationalBankAddress != null)
                return false;
        }
        else if (!typeAccountInternationalBankAddress.equals(other.typeAccountInternationalBankAddress))
            return false;
        if (typeAccountInternationalIban == null) {
            if (other.typeAccountInternationalIban != null)
                return false;
        }
        else if (!typeAccountInternationalIban.equals(other.typeAccountInternationalIban))
            return false;
        if (typeAccountInternationalBic == null) {
            if (other.typeAccountInternationalBic != null)
                return false;
        }
        else if (!typeAccountInternationalBic.equals(other.typeAccountInternationalBic))
            return false;
        if (typeAccountInternationalLocalBankCode == null) {
            if (other.typeAccountInternationalLocalBankCode != null)
                return false;
        }
        else if (!typeAccountInternationalLocalBankCode.equals(other.typeAccountInternationalLocalBankCode))
            return false;
        if (typeAccountInternationalLegalEntityLegalName == null) {
            if (other.typeAccountInternationalLegalEntityLegalName != null)
                return false;
        }
        else if (!typeAccountInternationalLegalEntityLegalName.equals(other.typeAccountInternationalLegalEntityLegalName))
            return false;
        if (typeAccountInternationalLegalEntityTradingName == null) {
            if (other.typeAccountInternationalLegalEntityTradingName != null)
                return false;
        }
        else if (!typeAccountInternationalLegalEntityTradingName.equals(other.typeAccountInternationalLegalEntityTradingName))
            return false;
        if (typeAccountInternationalLegalEntityRegisteredAddress == null) {
            if (other.typeAccountInternationalLegalEntityRegisteredAddress != null)
                return false;
        }
        else if (!typeAccountInternationalLegalEntityRegisteredAddress.equals(other.typeAccountInternationalLegalEntityRegisteredAddress))
            return false;
        if (typeAccountInternationalLegalEntityActualAddress == null) {
            if (other.typeAccountInternationalLegalEntityActualAddress != null)
                return false;
        }
        else if (!typeAccountInternationalLegalEntityActualAddress.equals(other.typeAccountInternationalLegalEntityActualAddress))
            return false;
        if (typeAccountInternationalLegalEntityRegisteredNumber == null) {
            if (other.typeAccountInternationalLegalEntityRegisteredNumber != null)
                return false;
        }
        else if (!typeAccountInternationalLegalEntityRegisteredNumber.equals(other.typeAccountInternationalLegalEntityRegisteredNumber))
            return false;
        if (typeAccountPurpose == null) {
            if (other.typeAccountPurpose != null)
                return false;
        }
        else if (!typeAccountPurpose.equals(other.typeAccountPurpose))
            return false;
        if (typeAccountLegalAgreementSignedAt == null) {
            if (other.typeAccountLegalAgreementSignedAt != null)
                return false;
        }
        else if (!typeAccountLegalAgreementSignedAt.equals(other.typeAccountLegalAgreementSignedAt))
            return false;
        if (typeAccountLegalAgreementId == null) {
            if (other.typeAccountLegalAgreementId != null)
                return false;
        }
        else if (!typeAccountLegalAgreementId.equals(other.typeAccountLegalAgreementId))
            return false;
        if (typeAccountLegalAgreementValidUntil == null) {
            if (other.typeAccountLegalAgreementValidUntil != null)
                return false;
        }
        else if (!typeAccountLegalAgreementValidUntil.equals(other.typeAccountLegalAgreementValidUntil))
            return false;
        if (initiatorId == null) {
            if (other.initiatorId != null)
                return false;
        }
        else if (!initiatorId.equals(other.initiatorId))
            return false;
        if (initiatorType == null) {
            if (other.initiatorType != null)
                return false;
        }
        else if (!initiatorType.equals(other.initiatorType))
            return false;
        if (wtime == null) {
            if (other.wtime != null)
                return false;
        }
        else if (!wtime.equals(other.wtime))
            return false;
        if (current == null) {
            if (other.current != null)
                return false;
        }
        else if (!current.equals(other.current))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.eventId == null) ? 0 : this.eventId.hashCode());
        result = prime * result + ((this.eventCreatedAt == null) ? 0 : this.eventCreatedAt.hashCode());
        result = prime * result + ((this.payoutId == null) ? 0 : this.payoutId.hashCode());
        result = prime * result + ((this.partyId == null) ? 0 : this.partyId.hashCode());
        result = prime * result + ((this.shopId == null) ? 0 : this.shopId.hashCode());
        result = prime * result + ((this.contractId == null) ? 0 : this.contractId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.statusPaidDetails == null) ? 0 : this.statusPaidDetails.hashCode());
        result = prime * result + ((this.statusPaidDetailsCardProviderName == null) ? 0 : this.statusPaidDetailsCardProviderName.hashCode());
        result = prime * result + ((this.statusPaidDetailsCardProviderTransactionId == null) ? 0 : this.statusPaidDetailsCardProviderTransactionId.hashCode());
        result = prime * result + ((this.statusCancelledUserInfoId == null) ? 0 : this.statusCancelledUserInfoId.hashCode());
        result = prime * result + ((this.statusCancelledUserInfoType == null) ? 0 : this.statusCancelledUserInfoType.hashCode());
        result = prime * result + ((this.statusCancelledDetails == null) ? 0 : this.statusCancelledDetails.hashCode());
        result = prime * result + ((this.statusConfirmedUserInfoId == null) ? 0 : this.statusConfirmedUserInfoId.hashCode());
        result = prime * result + ((this.statusConfirmedUserInfoType == null) ? 0 : this.statusConfirmedUserInfoType.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.typeCardToken == null) ? 0 : this.typeCardToken.hashCode());
        result = prime * result + ((this.typeCardPaymentSystem == null) ? 0 : this.typeCardPaymentSystem.hashCode());
        result = prime * result + ((this.typeCardBin == null) ? 0 : this.typeCardBin.hashCode());
        result = prime * result + ((this.typeCardMaskedPan == null) ? 0 : this.typeCardMaskedPan.hashCode());
        result = prime * result + ((this.typeCardTokenProvider == null) ? 0 : this.typeCardTokenProvider.hashCode());
        result = prime * result + ((this.typeAccountType == null) ? 0 : this.typeAccountType.hashCode());
        result = prime * result + ((this.typeAccountRussianAccount == null) ? 0 : this.typeAccountRussianAccount.hashCode());
        result = prime * result + ((this.typeAccountRussianBankName == null) ? 0 : this.typeAccountRussianBankName.hashCode());
        result = prime * result + ((this.typeAccountRussianBankPostAccount == null) ? 0 : this.typeAccountRussianBankPostAccount.hashCode());
        result = prime * result + ((this.typeAccountRussianBankBik == null) ? 0 : this.typeAccountRussianBankBik.hashCode());
        result = prime * result + ((this.typeAccountRussianInn == null) ? 0 : this.typeAccountRussianInn.hashCode());
        result = prime * result + ((this.typeAccountInternationalAccountHolder == null) ? 0 : this.typeAccountInternationalAccountHolder.hashCode());
        result = prime * result + ((this.typeAccountInternationalBankName == null) ? 0 : this.typeAccountInternationalBankName.hashCode());
        result = prime * result + ((this.typeAccountInternationalBankAddress == null) ? 0 : this.typeAccountInternationalBankAddress.hashCode());
        result = prime * result + ((this.typeAccountInternationalIban == null) ? 0 : this.typeAccountInternationalIban.hashCode());
        result = prime * result + ((this.typeAccountInternationalBic == null) ? 0 : this.typeAccountInternationalBic.hashCode());
        result = prime * result + ((this.typeAccountInternationalLocalBankCode == null) ? 0 : this.typeAccountInternationalLocalBankCode.hashCode());
        result = prime * result + ((this.typeAccountInternationalLegalEntityLegalName == null) ? 0 : this.typeAccountInternationalLegalEntityLegalName.hashCode());
        result = prime * result + ((this.typeAccountInternationalLegalEntityTradingName == null) ? 0 : this.typeAccountInternationalLegalEntityTradingName.hashCode());
        result = prime * result + ((this.typeAccountInternationalLegalEntityRegisteredAddress == null) ? 0 : this.typeAccountInternationalLegalEntityRegisteredAddress.hashCode());
        result = prime * result + ((this.typeAccountInternationalLegalEntityActualAddress == null) ? 0 : this.typeAccountInternationalLegalEntityActualAddress.hashCode());
        result = prime * result + ((this.typeAccountInternationalLegalEntityRegisteredNumber == null) ? 0 : this.typeAccountInternationalLegalEntityRegisteredNumber.hashCode());
        result = prime * result + ((this.typeAccountPurpose == null) ? 0 : this.typeAccountPurpose.hashCode());
        result = prime * result + ((this.typeAccountLegalAgreementSignedAt == null) ? 0 : this.typeAccountLegalAgreementSignedAt.hashCode());
        result = prime * result + ((this.typeAccountLegalAgreementId == null) ? 0 : this.typeAccountLegalAgreementId.hashCode());
        result = prime * result + ((this.typeAccountLegalAgreementValidUntil == null) ? 0 : this.typeAccountLegalAgreementValidUntil.hashCode());
        result = prime * result + ((this.initiatorId == null) ? 0 : this.initiatorId.hashCode());
        result = prime * result + ((this.initiatorType == null) ? 0 : this.initiatorType.hashCode());
        result = prime * result + ((this.wtime == null) ? 0 : this.wtime.hashCode());
        result = prime * result + ((this.current == null) ? 0 : this.current.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Payout (");

        sb.append(id);
        sb.append(", ").append(eventId);
        sb.append(", ").append(eventCreatedAt);
        sb.append(", ").append(payoutId);
        sb.append(", ").append(partyId);
        sb.append(", ").append(shopId);
        sb.append(", ").append(contractId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(status);
        sb.append(", ").append(statusPaidDetails);
        sb.append(", ").append(statusPaidDetailsCardProviderName);
        sb.append(", ").append(statusPaidDetailsCardProviderTransactionId);
        sb.append(", ").append(statusCancelledUserInfoId);
        sb.append(", ").append(statusCancelledUserInfoType);
        sb.append(", ").append(statusCancelledDetails);
        sb.append(", ").append(statusConfirmedUserInfoId);
        sb.append(", ").append(statusConfirmedUserInfoType);
        sb.append(", ").append(type);
        sb.append(", ").append(typeCardToken);
        sb.append(", ").append(typeCardPaymentSystem);
        sb.append(", ").append(typeCardBin);
        sb.append(", ").append(typeCardMaskedPan);
        sb.append(", ").append(typeCardTokenProvider);
        sb.append(", ").append(typeAccountType);
        sb.append(", ").append(typeAccountRussianAccount);
        sb.append(", ").append(typeAccountRussianBankName);
        sb.append(", ").append(typeAccountRussianBankPostAccount);
        sb.append(", ").append(typeAccountRussianBankBik);
        sb.append(", ").append(typeAccountRussianInn);
        sb.append(", ").append(typeAccountInternationalAccountHolder);
        sb.append(", ").append(typeAccountInternationalBankName);
        sb.append(", ").append(typeAccountInternationalBankAddress);
        sb.append(", ").append(typeAccountInternationalIban);
        sb.append(", ").append(typeAccountInternationalBic);
        sb.append(", ").append(typeAccountInternationalLocalBankCode);
        sb.append(", ").append(typeAccountInternationalLegalEntityLegalName);
        sb.append(", ").append(typeAccountInternationalLegalEntityTradingName);
        sb.append(", ").append(typeAccountInternationalLegalEntityRegisteredAddress);
        sb.append(", ").append(typeAccountInternationalLegalEntityActualAddress);
        sb.append(", ").append(typeAccountInternationalLegalEntityRegisteredNumber);
        sb.append(", ").append(typeAccountPurpose);
        sb.append(", ").append(typeAccountLegalAgreementSignedAt);
        sb.append(", ").append(typeAccountLegalAgreementId);
        sb.append(", ").append(typeAccountLegalAgreementValidUntil);
        sb.append(", ").append(initiatorId);
        sb.append(", ").append(initiatorType);
        sb.append(", ").append(wtime);
        sb.append(", ").append(current);

        sb.append(")");
        return sb.toString();
    }
}
