/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables;


import com.rbkmoney.newway.domain.Keys;
import com.rbkmoney.newway.domain.Nw;
import com.rbkmoney.newway.domain.enums.PaymentMethodType;
import com.rbkmoney.newway.domain.tables.records.PaymentMethodRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentMethod extends TableImpl<PaymentMethodRecord> {

    private static final long serialVersionUID = 1987681298;

    /**
     * The reference instance of <code>nw.payment_method</code>
     */
    public static final PaymentMethod PAYMENT_METHOD = new PaymentMethod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentMethodRecord> getRecordType() {
        return PaymentMethodRecord.class;
    }

    /**
     * The column <code>nw.payment_method.id</code>.
     */
    public final TableField<PaymentMethodRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('nw.payment_method_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>nw.payment_method.version_id</code>.
     */
    public final TableField<PaymentMethodRecord, Long> VERSION_ID = createField("version_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>nw.payment_method.payment_method_ref_id</code>.
     */
    public final TableField<PaymentMethodRecord, String> PAYMENT_METHOD_REF_ID = createField("payment_method_ref_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.payment_method.name</code>.
     */
    public final TableField<PaymentMethodRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.payment_method.description</code>.
     */
    public final TableField<PaymentMethodRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>nw.payment_method.type</code>.
     */
    public final TableField<PaymentMethodRecord, PaymentMethodType> TYPE = createField("type", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.rbkmoney.newway.domain.enums.PaymentMethodType.class), this, "");

    /**
     * The column <code>nw.payment_method.wtime</code>.
     */
    public final TableField<PaymentMethodRecord, LocalDateTime> WTIME = createField("wtime", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("timezone('utc'::text, now())", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>nw.payment_method.current</code>.
     */
    public final TableField<PaymentMethodRecord, Boolean> CURRENT = createField("current", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>nw.payment_method</code> table reference
     */
    public PaymentMethod() {
        this("payment_method", null);
    }

    /**
     * Create an aliased <code>nw.payment_method</code> table reference
     */
    public PaymentMethod(String alias) {
        this(alias, PAYMENT_METHOD);
    }

    private PaymentMethod(String alias, Table<PaymentMethodRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentMethod(String alias, Table<PaymentMethodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Nw.NW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PaymentMethodRecord, Long> getIdentity() {
        return Keys.IDENTITY_PAYMENT_METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentMethodRecord> getPrimaryKey() {
        return Keys.PAYMENT_METHOD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentMethodRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentMethodRecord>>asList(Keys.PAYMENT_METHOD_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentMethod as(String alias) {
        return new PaymentMethod(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentMethod rename(String name) {
        return new PaymentMethod(name, null);
    }
}
