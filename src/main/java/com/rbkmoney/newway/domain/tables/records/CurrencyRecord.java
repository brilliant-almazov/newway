/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.newway.domain.tables.records;


import com.rbkmoney.newway.domain.tables.Currency;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrencyRecord extends UpdatableRecordImpl<CurrencyRecord> implements Record9<Long, Long, String, String, String, Short, Short, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 1372269750;

    /**
     * Setter for <code>nw.currency.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>nw.currency.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>nw.currency.version_id</code>.
     */
    public void setVersionId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>nw.currency.version_id</code>.
     */
    public Long getVersionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>nw.currency.currency_ref_id</code>.
     */
    public void setCurrencyRefId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>nw.currency.currency_ref_id</code>.
     */
    public String getCurrencyRefId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>nw.currency.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>nw.currency.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>nw.currency.symbolic_code</code>.
     */
    public void setSymbolicCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>nw.currency.symbolic_code</code>.
     */
    public String getSymbolicCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>nw.currency.numeric_code</code>.
     */
    public void setNumericCode(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>nw.currency.numeric_code</code>.
     */
    public Short getNumericCode() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>nw.currency.exponent</code>.
     */
    public void setExponent(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>nw.currency.exponent</code>.
     */
    public Short getExponent() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>nw.currency.wtime</code>.
     */
    public void setWtime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>nw.currency.wtime</code>.
     */
    public LocalDateTime getWtime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>nw.currency.current</code>.
     */
    public void setCurrent(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>nw.currency.current</code>.
     */
    public Boolean getCurrent() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, Long, String, String, String, Short, Short, LocalDateTime, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, Long, String, String, String, Short, Short, LocalDateTime, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Currency.CURRENCY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Currency.CURRENCY.VERSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Currency.CURRENCY.CURRENCY_REF_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Currency.CURRENCY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Currency.CURRENCY.SYMBOLIC_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field6() {
        return Currency.CURRENCY.NUMERIC_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field7() {
        return Currency.CURRENCY.EXPONENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field8() {
        return Currency.CURRENCY.WTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return Currency.CURRENCY.CURRENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getVersionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCurrencyRefId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSymbolicCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value6() {
        return getNumericCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value7() {
        return getExponent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value8() {
        return getWtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getCurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value2(Long value) {
        setVersionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value3(String value) {
        setCurrencyRefId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value5(String value) {
        setSymbolicCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value6(Short value) {
        setNumericCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value7(Short value) {
        setExponent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value8(LocalDateTime value) {
        setWtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord value9(Boolean value) {
        setCurrent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyRecord values(Long value1, Long value2, String value3, String value4, String value5, Short value6, Short value7, LocalDateTime value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CurrencyRecord
     */
    public CurrencyRecord() {
        super(Currency.CURRENCY);
    }

    /**
     * Create a detached, initialised CurrencyRecord
     */
    public CurrencyRecord(Long id, Long versionId, String currencyRefId, String name, String symbolicCode, Short numericCode, Short exponent, LocalDateTime wtime, Boolean current) {
        super(Currency.CURRENCY);

        set(0, id);
        set(1, versionId);
        set(2, currencyRefId);
        set(3, name);
        set(4, symbolicCode);
        set(5, numericCode);
        set(6, exponent);
        set(7, wtime);
        set(8, current);
    }
}
